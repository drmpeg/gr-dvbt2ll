# auto-generated by grc.converter

id: dvbt2ll_framemapperfint_cc
label: Frame Mapper/Freq Int
category: '[Core]/Digital Television/DVB-T2LL'

parameters:
-   id: framesize
    label: FECFRAME size
    dtype: enum
    options: [FECFRAME_NORMAL, FECFRAME_SHORT]
    option_labels: [Normal, Short]
    option_attributes:
        val: [dvbt2ll.FECFRAME_NORMAL, dvbt2ll.FECFRAME_SHORT]
-   id: rate
    label: Code rate
    dtype: enum
    options: [C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6]
    option_labels: [1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6]
    option_attributes:
        val: [dvbt2ll.C1_3, dvbt2ll.C2_5, dvbt2ll.C1_2, dvbt2ll.C3_5, dvbt2ll.C2_3,
            dvbt2ll.C3_4, dvbt2ll.C4_5, dvbt2ll.C5_6]
-   id: constellation
    label: Constellation
    dtype: enum
    options: [MOD_QPSK, MOD_16QAM, MOD_64QAM, MOD_256QAM]
    option_labels: [QPSK, 16QAM, 64QAM, 256QAM]
    option_attributes:
        val: [dvbt2ll.MOD_QPSK, dvbt2ll.MOD_16QAM, dvbt2ll.MOD_64QAM, dvbt2ll.MOD_256QAM]
-   id: rotation
    label: Constellation rotation
    dtype: enum
    options: [ROTATION_OFF, ROTATION_ON]
    option_labels: ['Off', 'On']
    option_attributes:
        val: [dvbt2ll.ROTATION_OFF, dvbt2ll.ROTATION_ON]
-   id: fecblocks
    label: FEC blocks per frame
    dtype: int
    default: '168'
-   id: tiblocks
    label: TI blocks per frame
    dtype: int
    default: '3'
-   id: carriermode
    label: Extended Carrier Mode
    dtype: enum
    options: [CARRIERS_NORMAL, CARRIERS_EXTENDED]
    option_labels: [Normal, Extended]
    option_attributes:
        val: [dvbt2ll.CARRIERS_NORMAL, dvbt2ll.CARRIERS_EXTENDED]
-   id: fftsize1
    label: FFT Size
    dtype: enum
    options: [FFTSIZE_1K, FFTSIZE_2K, FFTSIZE_4K, FFTSIZE_8K, FFTSIZE_8K_T2GI, FFTSIZE_16K,
        FFTSIZE_32K, FFTSIZE_32K_T2GI]
    option_labels: [1K, 2K, 4K, 8K, 8K DVB-T2 GI, 16K, 32K, 32K DVB-T2 GI]
    option_attributes:
        val: [dvbt2ll.FFTSIZE_1K, dvbt2ll.FFTSIZE_2K, dvbt2ll.FFTSIZE_4K, dvbt2ll.FFTSIZE_8K,
            dvbt2ll.FFTSIZE_8K_T2GI, dvbt2ll.FFTSIZE_16K, dvbt2ll.FFTSIZE_32K, dvbt2ll.FFTSIZE_32K_T2GI]
    hide: ${ (preamble1.hide_base if str(version) == 'VERSION_111' else preamble2.hide_base)
        }
-   id: fftsize2
    label: FFT Size
    dtype: enum
    options: [FFTSIZE_2K, FFTSIZE_4K, FFTSIZE_8K, FFTSIZE_8K_T2GI, FFTSIZE_16K, FFTSIZE_16K_T2GI]
    option_labels: [2K, 4K, 8K, 8K DVB-T2 GI, 16K, 16K DVB-T2 GI]
    option_attributes:
        val: [dvbt2ll.FFTSIZE_2K, dvbt2ll.FFTSIZE_4K, dvbt2ll.FFTSIZE_8K, dvbt2ll.FFTSIZE_8K_T2GI,
            dvbt2ll.FFTSIZE_16K, dvbt2ll.FFTSIZE_16K_T2GI]
    hide: ${ (preamble1.hide_lite if str(version) == 'VERSION_111' else preamble2.hide_lite)
        }
-   id: guardinterval
    label: Guard Interval
    dtype: enum
    options: [GI_1_32, GI_1_16, GI_1_8, GI_1_4, GI_1_128, GI_19_128, GI_19_256]
    option_labels: [1/32, 1/16, 1/8, 1/4, 1/128, 19/128, 19/256]
    option_attributes:
        val: [dvbt2ll.GI_1_32, dvbt2ll.GI_1_16, dvbt2ll.GI_1_8, dvbt2ll.GI_1_4, dvbt2ll.GI_1_128,
            dvbt2ll.GI_19_128, dvbt2ll.GI_19_256]
-   id: l1constellation
    label: L1 Constellation
    dtype: enum
    options: [L1_MOD_BPSK, L1_MOD_QPSK, L1_MOD_16QAM, L1_MOD_64QAM]
    option_labels: [BPSK, QPSK, 16QAM, 64QAM]
    option_attributes:
        val: [dvbt2ll.L1_MOD_BPSK, dvbt2ll.L1_MOD_QPSK, dvbt2ll.L1_MOD_16QAM, dvbt2ll.L1_MOD_64QAM]
-   id: pilotpattern
    label: Pilot Pattern
    dtype: enum
    options: [PILOT_PP1, PILOT_PP2, PILOT_PP3, PILOT_PP4, PILOT_PP5, PILOT_PP6, PILOT_PP7,
        PILOT_PP8]
    option_labels: [PP1, PP2, PP3, PP4, PP5, PP6, PP7, PP8]
    option_attributes:
        val: [dvbt2ll.PILOT_PP1, dvbt2ll.PILOT_PP2, dvbt2ll.PILOT_PP3, dvbt2ll.PILOT_PP4,
            dvbt2ll.PILOT_PP5, dvbt2ll.PILOT_PP6, dvbt2ll.PILOT_PP7, dvbt2ll.PILOT_PP8]
-   id: t2frames
    label: T2 Frames per Super-frame
    dtype: int
    default: '2'
-   id: numdatasyms
    label: Number of Data Symbols
    dtype: int
    default: '100'
-   id: paprmode1
    label: PAPR Mode
    dtype: enum
    options: [PAPR_OFF, PAPR_ACE, PAPR_TR, PAPR_BOTH]
    option_labels: ['Off', Active Constellation Extension, Tone Reservation, Both
            ACE and TR]
    option_attributes:
        val: [dvbt2ll.PAPR_OFF, dvbt2ll.PAPR_ACE, dvbt2ll.PAPR_TR, dvbt2ll.PAPR_BOTH]
    hide: ${ version.hide_111 }
-   id: paprmode2
    label: PAPR Mode
    dtype: enum
    options: [PAPR_OFF, PAPR_ACE, PAPR_TR, PAPR_BOTH]
    option_labels: [P2 Only, Active Constellation Extension, Tone Reservation, Both
            ACE and TR]
    option_attributes:
        val: [dvbt2ll.PAPR_OFF, dvbt2ll.PAPR_ACE, dvbt2ll.PAPR_TR, dvbt2ll.PAPR_BOTH]
    hide: ${ version.hide_131 }
-   id: version
    label: Specification Version
    dtype: enum
    options: [VERSION_111, VERSION_131]
    option_labels: [1.1.1, 1.3.1]
    option_attributes:
        hide_111: [none, all]
        hide_131: [all, none]
        val: [dvbt2ll.VERSION_111, dvbt2ll.VERSION_131]
-   id: preamble1
    label: Preamble
    dtype: enum
    options: [PREAMBLE_T2_SISO, PREAMBLE_T2_MISO]
    option_labels: [T2 SISO, T2 MISO]
    option_attributes:
        hide_base: [none, none]
        hide_lite: [all, all]
        val: [dvbt2ll.PREAMBLE_T2_SISO, dvbt2ll.PREAMBLE_T2_MISO]
    hide: ${ version.hide_111 }
-   id: preamble2
    label: Preamble
    dtype: enum
    options: [PREAMBLE_T2_SISO, PREAMBLE_T2_MISO, PREAMBLE_T2_LITE_SISO, PREAMBLE_T2_LITE_MISO]
    option_labels: [T2 SISO, T2 MISO, T2-Lite SISO, T2-Lite MISO]
    option_attributes:
        hide_base: [none, none, all, all]
        hide_lite: [all, all, none, none]
        val: [dvbt2ll.PREAMBLE_T2_SISO, dvbt2ll.PREAMBLE_T2_MISO, dvbt2ll.PREAMBLE_T2_LITE_SISO,
            dvbt2ll.PREAMBLE_T2_LITE_MISO]
    hide: ${ version.hide_131 }
-   id: inputmode
    label: Baseband Framing Mode
    dtype: enum
    options: [INPUTMODE_NORMAL, INPUTMODE_HIEFF]
    option_labels: [Normal, High Efficiency]
    option_attributes:
        val: [dvbt2ll.INPUTMODE_NORMAL, dvbt2ll.INPUTMODE_HIEFF]
    hide: ${ version.hide_131 }
-   id: reservedbiasbits
    label: Reserved Bits Bias Balancing
    dtype: enum
    options: [RESERVED_OFF, RESERVED_ON]
    option_labels: ['Off', 'On']
    option_attributes:
        val: [dvbt2ll.RESERVED_OFF, dvbt2ll.RESERVED_ON]
    hide: ${ version.hide_131 }
-   id: l1scrambled
    label: L1-post Scrambling
    dtype: enum
    options: [L1_SCRAMBLED_OFF, L1_SCRAMBLED_ON]
    option_labels: ['Off', 'On']
    option_attributes:
        val: [dvbt2ll.L1_SCRAMBLED_OFF, dvbt2ll.L1_SCRAMBLED_ON]
    hide: ${ version.hide_131 }
-   id: inband
    label: In-band Signalling
    dtype: enum
    options: [INBAND_OFF, INBAND_ON]
    option_labels: ['Off', Type B]
    option_attributes:
        val: [dvbt2ll.INBAND_OFF, dvbt2ll.INBAND_ON]
    hide: ${ version.hide_131 }

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex

templates:
    imports: import dvbt2ll
    make: "dvbt2ll.framemapperfint_cc(${framesize.val}, ${rate.val}, ${constellation.val},\
        \ ${rotation.val}, ${fecblocks}, ${tiblocks}, ${carriermode.val}, \n% if str(version)\
        \ == 'VERSION_111':\n${fftsize1.val}, \n% else:\n% if str(preamble2) == 'PREAMBLE_T2_SISO'\
        \ or str(preamble2) == 'PREAMBLE_T2_MISO':\n${fftsize1.val}, \n% else:\n${fftsize2.val},\
        \ \n% endif\n% endif\n${guardinterval.val}, ${l1constellation.val}, ${pilotpattern.val},\
        \ ${t2frames}, ${numdatasyms}, \n% if str(version) == 'VERSION_111':\n${paprmode1.val},\
        \ \n% else:\n${paprmode2.val}, \n% endif\n${version.val}, \n% if str(version)\
        \ == 'VERSION_111':\n${preamble1.val}, \n% else:\n${preamble2.val}, \n% endif\n\
        ${inputmode.val}, ${reservedbiasbits.val}, ${l1scrambled.val}, ${inband.val})"

file_format: 1
